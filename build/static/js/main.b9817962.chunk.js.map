{"version":3,"sources":["pages/Home.js","pages/AllStocks.js","pages/SearchStock.js","pages/AuthedSearchStock.js","pages/Login.js","pages/Register.js","App.js","serviceWorker.js","index.js"],"names":["Home","id","columns","headerName","field","sortable","AllStock","useState","rowData","setRowData","dropdownOpen","setOpen","search","setSearch","url","useEffect","fetch","then","res","json","data","map","stocks","name","symbol","industry","inputs","className","style","height","width","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","value","columnDefs","pagination","paginationPageSize","getData","status","code","Error","error","console","log","timestamp","open","low","high","close","volume","volumes","useData","setError","loading","setLoading","stock","setStock","debouncedSearch","delay","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","useDebounce","catch","e","SearchBar","props","searchStock","setSearchStock","aria-labelledby","type","onChange","target","onSearch","Button","Stock","title","searchTerm","SearchStock","length","key","AuthedSearch","token","localStorage","getItem","start","setStart","end","setEnd","timeframe","setTimeFrame","headers","accept","Authorization","graphData","i","push","JSON","stringify","parseFloat","options","curveType","chartType","Login","email","password","method","body","setItem","login","document","getElementById","Register","register","Header","NavStocks","NavUser","to","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b9817962.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Home() {\r\n    return (\r\n      <div id = \"Home\">\r\n        <h1>Stocks Galore</h1>\r\n        <p id=\"Welcome\">\r\n        Welcome to the Stocks Galore. Here you can view a multitude of \r\n        stocks and their current status in the stock market. To view, \r\n        all stocks click on the All Stocks tab above. To view the latest \r\n        stocks for specific symbol click on the Search Stocks button above. \r\n        To see a record of a particular stock symbol first login or register \r\n        and then click the Authenticated Search option above. Click the first \r\n        option on the right to register an account and the final option to login.\r\n        </p>\r\n      </div>\r\n    )\r\n  }","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nconst columns = [\r\n  { headerName: \"Name\", field: \"name\", sortable: true },\r\n  { headerName: \"Symbol\", field: \"symbol\" },\r\n  { headerName: \"Industry\", field: \"industry\", sortable: true }\r\n]\r\n\r\nexport default function AllStock() {\r\n  const [rowData, setRowData] = useState([]);\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n\r\n  const url = `http://131.181.190.87:3000/stocks/symbols` + (search ? `?industry=${search}` : '');\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data =>\r\n        data.map(stocks => {\r\n          return {\r\n            name: stocks.name,\r\n            symbol: stocks.symbol,\r\n            industry: stocks.industry\r\n          };\r\n        })\r\n      )\r\n      .then(inputs => setRowData(inputs));\r\n  }, [url]);\r\n  return (\r\n    <div>\r\n      <h1>All Stocks</h1>\r\n\r\n      <p id=\"allHowSearch\">\r\n        Scroll through all the Stocks or search by industry by clicking on the Industries button and selecting the relevant industry.\r\n      </p>\r\n\r\n      <div\r\n        className=\"ag-theme-balham\"\r\n        id=\"allStock\"\r\n        style={{\r\n          height: \"600px\",\r\n          width: \"620px\"\r\n        }}>\r\n        <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n          <DropdownToggle caret>\r\n            Industries\r\n            </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem onClick={value => setSearch('')}>All</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Health%20Care')}>Health Care</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Industrials')}>Industrials</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Consumer%20Discretionary')}>Consumer Discretionary</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Information%20Technology')}>Information Technology</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Consumer%20Staples')}>Consumer Staples</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Utilities')}>Utilities</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Financials')}>Financials</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Real%20Estate')}>Real Estate</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Materials')}>Materials</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Energy')}>Energy</DropdownItem>\r\n            <DropdownItem onClick={value => setSearch('Telecommunication%20Services')}>Telecommunication Services</DropdownItem>\r\n\r\n          </DropdownMenu>\r\n        </ButtonDropdown>\r\n        <AgGridReact\r\n          columnDefs={columns}\r\n          rowData={rowData}\r\n          pagination={true}\r\n          paginationPageSize={25}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from \"react\"\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\nlet columns = [\r\n  { headerName: \"Timestamp\", field: \"timestamp\" },\r\n  { headerName: \"Symbol\", field: \"symbol\" },\r\n  { headerName: \"Name\", field: \"name\" },\r\n  { headerName: \"Industry\", field: \"industry\" },\r\n  { headerName: \"Open\", field: \"open\" },\r\n  { headerName: \"Low\", field: \"low\" },\r\n  { headerName: \"High\", field: \"high\" },\r\n  { headerName: \"Close\", field: \"close\" },\r\n  { headerName: 'Volume', field: \"volume\" }\r\n]\r\n\r\nfunction getData(search) {\r\n  const url = `http://131.181.190.87:3000/stocks/` + (search ? `${search}` : 'A');\r\n\r\n  const error = code => {\r\n    throw new Error(code);\r\n  };\r\n\r\n  return fetch(url)\r\n    .then(res => (res.status > 404 ? error(res.status) : res))\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n      columns.timestamp = res.timestamp;\r\n      columns.symbol = res.symbol;\r\n      columns.name = res.name;\r\n      columns.industry = res.industry;\r\n      columns.open = res.open;\r\n      columns.low = res.low;\r\n      columns.high = res.high;\r\n      columns.close = res.close;\r\n      columns.volume = res.volumes;\r\n    })\r\n}\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n}\r\n\r\nfunction useData(search) {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [stock, setStock] = useState('');\r\n  const debouncedSearch = useDebounce(search, 300);\r\n\r\n  useEffect(\r\n    () => {\r\n      setLoading(true);\r\n      getData(debouncedSearch)\r\n        .then(stock => {\r\n          setStock(stock);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          setError(e);\r\n          setLoading(false);\r\n        });\r\n\r\n    }, [debouncedSearch]\r\n  );\r\n  return {\r\n    stock,\r\n    loading,\r\n    error,\r\n  }\r\n}\r\n\r\nfunction SearchBar(props) {\r\n  const [searchStock, setSearchStock] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        aria-labelledby=\"search-button\"\r\n        type=\"text\"\r\n        name=\"search\"\r\n        id='search'\r\n        value={searchStock}\r\n        onChange={e => {\r\n          setSearchStock(e.target.value);\r\n          props.onSearch(e.target.value);\r\n        }}\r\n      />\r\n      \r\n      <Button onClick={e => {\r\n        setSearchStock(\"\");\r\n        props.onSearch(\"\");\r\n      }}\r\n      >\r\n        Clear\r\n            </Button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Stock({ title, searchTerm }) {\r\n  if (!searchTerm) {\r\n    return (\r\n      <p>{title}</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <p>hi</p>\r\n  );\r\n}\r\n\r\n\r\nexport default function SearchStock() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const { stock, loading } = useData(search);\r\n  const rowData = [\r\n    {\r\n      timestamp: columns.timestamp,\r\n      symbol: columns.symbol,\r\n      name: columns.name,\r\n      industry: columns.industry,\r\n      open: columns.open,\r\n      low: columns.low,\r\n      high: columns.high,\r\n      close: columns.close,\r\n      volume: columns.volume\r\n    }]\r\n\r\n  if (columns.symbol !== search) {\r\n    return (\r\n      <div>\r\n        <h1>Search Stock</h1>\r\n        <p id=\"searchInstructions\">\r\n          To search via symbol enter the symbol into the search bar below.\r\n            </p>\r\n        <SearchBar onSearch={value => setSearch(value)} />\r\n        <br></br>\r\n        <p id='searchStockErrorMessage'>No entry for this symbol in stocks database. Please enter a valid symbol.</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <div>\r\n        <h1>Search Stock</h1>\r\n        <p id=\"searchInstructions\">\r\n          To search via symbol enter the symbol into the search bar below.\r\n        </p>\r\n        <SearchBar onSearch={value => setSearch(value)} />\r\n        <div id='searchResults'>\r\n\r\n          {!loading ? (\r\n            stock && stock.length > 0 ? (\r\n              stock.map(stock => (\r\n                <Stock key={stock.symbol} searchTerm={search} />\r\n              ))\r\n            ) : (\r\n                <div\r\n                  className=\"ag-theme-balham\"\r\n                  style={{\r\n                    height: \"80px\",\r\n                    width: \"100%\"\r\n                  }}>\r\n\r\n                  <AgGridReact\r\n                    columnDefs={columns}\r\n                    rowData={rowData}\r\n\r\n\r\n                  />\r\n                </div>\r\n              )\r\n          ) : (\r\n              <p>Loading ...</p>\r\n\r\n            )}\r\n        </div>\r\n        <br></br>\r\n        <p\r\n        id =\"searchStockInfo\">\r\n          The latest result for {columns.name} was recorded on {columns.timestamp}.\r\n          For that timestamp the market open with a value of {columns.open} and close with a value of {columns.close}.\r\n          Over the duration of the day, the stocked peaked with a value of {columns.high} and was at its lowest with a value of {columns.low}.\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Button } from 'reactstrap';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nlet columns = [\r\n    { headerName: \"Timestamp\", field: \"timestamp\" },\r\n    { headerName: \"Symbol\", field: \"symbol\" },\r\n    { headerName: \"Name\", field: \"name\" },\r\n    { headerName: \"Industry\", field: \"industry\" },\r\n    { headerName: \"Open\", field: \"open\" },\r\n    { headerName: \"Low\", field: \"low\" },\r\n    { headerName: \"High\", field: \"high\" },\r\n    { headerName: \"Close\", field: \"close\" },\r\n    { headerName: 'Volume', field: \"volumes\" }\r\n]\r\n\r\nexport default function AuthedSearch() {\r\n    const [rowData, setRowData] = useState([]);\r\n    const token = localStorage.getItem('token');\r\n    const [dropdownOpen, setOpen] = useState(false);\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [start, setStart] = useState('');\r\n    const [end, setEnd] = useState('');\r\n\r\n    const [timeframe, setTimeFrame]= useState('');\r\n\r\n    //let length;\r\n\r\n\r\n    //const [length, setLength] = useState();\r\n\r\n    const toggle = () => setOpen(!dropdownOpen);\r\n\r\n    //let search;\r\n    //let searchClicks = 2\r\n\r\n    const url = `http://131.181.190.87:3000/stocks/authed/` + (search ? `${search}` : 'A') + `?from=` + (start ? `${start}` : '2019-11-06T14:00:00.000Z') + `&to=` + (end ? `${end}` : '2020-03-24T14:00:00.000Z')\r\n\r\n    const headers = {\r\n        accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n    }\r\n\r\n\r\n    /*fetch(url, {headers})\r\n    //.then(res => (res.status > 404 ? error(res.status) : res))\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      columns.timestamp = res.timestamp;\r\n      columns.symbol = res.symbol;\r\n      columns.name = res.name;\r\n      columns.industry = res.industry;\r\n      columns.open = res.open;\r\n      columns.low = res.low;\r\n      columns.high = res.high;\r\n      columns.close = res.close;\r\n      columns.volume = res.volumes;\r\n      console.log(columns.timestamp)\r\n    })\r\n\r\n    const rowData = [\r\n        {\r\n          timestamp: columns.timestamp,\r\n          symbol: columns.symbol,\r\n          name: columns.name,\r\n          industry: columns.industry,\r\n          open: columns.open,\r\n          low: columns.low,\r\n          high: columns.high,\r\n          close: columns.close,\r\n          volume: columns.volume\r\n        }]*/\r\n    useEffect(() => {\r\n        fetch(url, { headers })\r\n            .then(res => res.json())\r\n            .then(res =>\r\n                res.map(stocks => {\r\n                    return {\r\n                        timestamp: stocks.timestamp,\r\n                        symbol: stocks.symbol,\r\n                        name: stocks.name,\r\n                        industry: stocks.industry,\r\n                        open: stocks.open,\r\n                        low: stocks.low,\r\n                        high: stocks.high,\r\n                        close: stocks.close,\r\n                        volumes: stocks.volumes\r\n                    }\r\n                })\r\n            )\r\n            .then(inputs => setRowData(inputs))\r\n        //.then(console.log(rowData[0]))\r\n\r\n    })\r\n\r\n\r\n\r\n    let graphData =\r\n        [[\"TimeStamp\", \"Close Value\"]]\r\n\r\n    for (let i = rowData.length-1; i >= 0; i--) {\r\n        graphData.push([JSON.stringify(rowData[i].timestamp),parseFloat(rowData[i].close)])\r\n    }\r\n\r\n\r\n    const options = {\r\n        title: `Close value for Stock ${search} with timeframe of ${timeframe}`,\r\n        curveType: \"function\"\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Authenticated Search of Stocks</h1>\r\n            <p\r\n                id=\"searchInstructions\">\r\n                Before searching please login. To search enter the symbol of the stock you wish to view from the all stocks table.\r\n            </p>\r\n            <div\r\n                id=\"authedSearchSearchBar\">\r\n                <div>\r\n                    <label>Symbol:</label>\r\n                    <input\r\n                        id=\"authedSearchSymbol\"\r\n                        value={search}\r\n                        onChange={e => {\r\n                            setSearch(e.target.value)\r\n                            console.log(rowData[0].timestamp)\r\n                        }}></input>\r\n                </div>\r\n                <Button onClick={e => {\r\n                    setSearch('');\r\n                }}>\r\n                    Clear\r\n                </Button>\r\n                <div>\r\n                    <br></br>\r\n                    <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                        <DropdownToggle caret>\r\n                            Dates\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2019-11-06T14:00:00.000Z')\r\n                                setEnd('2020-03-24T14:00:00.000Z')\r\n                                setTimeFrame('November 2019 to March 2020')\r\n                            }}>All</DropdownItem>\r\n\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2019-11-06T14:00:00.000Z')\r\n                                setEnd('2019-11-30T14:00:00.000Z')\r\n                                setTimeFrame('November 2019')\r\n                            }}>November 2019</DropdownItem>\r\n\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2019-12-01T14:00:00.000Z')\r\n                                setEnd('2019-12-31T14:00:00.000Z')\r\n                                setTimeFrame('December 2019')\r\n                            }}>December 2019</DropdownItem>\r\n\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2020-01-01T14:00:00.000Z')\r\n                                setEnd('2020-01-31T14:00:00.000Z')\r\n                                setTimeFrame('January 2020')\r\n                            }}>January 2020</DropdownItem>\r\n\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2020-02-01T14:00:00.000Z')\r\n                                setEnd('2020-02-29T14:00:00.000Z')\r\n                                setTimeFrame('February 2020')\r\n                            }}>February 2020</DropdownItem>\r\n\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2020-03-01T14:00:00.000Z')\r\n                                setEnd('2020-03-24T14:00:00.000Z')\r\n                                setTimeFrame('March 2020')\r\n                            }}>March 2020</DropdownItem>\r\n\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2019-11-06T14:00:00.000Z')\r\n                                setEnd('2019-12-31T14:00:00.000Z')\r\n                                setTimeFrame('November 2019 to December 2019')\r\n                            }}>2019</DropdownItem>\r\n\r\n                            <DropdownItem onClick={e => {\r\n                                setStart('2020-01-01T14:00:00.000Z')\r\n                                setEnd('2020-03-24T14:00:00.000Z')\r\n                                setTimeFrame('January 2020 to March 2020')\r\n                            }}>2020</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </ButtonDropdown>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className=\"ag-theme-balham\"\r\n                id=\"authedStocks\"\r\n                style={{\r\n                    height: \"300px\"\r\n                }}>\r\n                <AgGridReact\r\n                    columnDefs={columns}\r\n                    rowData={rowData}\r\n                //pagination={true}\r\n                //paginationPageSize={25}\r\n                />\r\n            </div>\r\n            <Chart\r\n                chartType=\"LineChart\"\r\n                width='90%'\r\n                height='400px'\r\n                data={graphData}\r\n                options={options}\r\n            />\r\n            <br></br>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from \"reactstrap\";\r\n\r\n//import jwt from \"jsonwebtoken\";\r\n\r\n\r\nexport default function Login() {\r\n    function login(email, password) {\r\n        const url = `http://131.181.190.87:3000/user/login`\r\n\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            headers: { accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email: email, password: password })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                localStorage.setItem(\"token\", res.token)\r\n                console.log(res)\r\n                //localStorage.setItem('token',res.token)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div id=\"loginInputs\">\r\n            <h1>Login</h1>\r\n            <div>\r\n                <label>Email:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"logEmail\"></input>\r\n            </div>\r\n            <div>\r\n                <label>Password:</label>\r\n                <input\r\n                    type='password'\r\n                    id='logPassword'\r\n                ></input>\r\n            </div>\r\n            <Button onClick={e => {\r\n                let email = document.getElementById(\"logEmail\").value;\r\n                let password = document.getElementById('logPassword').value;\r\n                login(email, password);\r\n            }}>\r\n                Login</Button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from \"reactstrap\";\r\n//import { useState } from 'react';\r\n//import jwt from 'jsonwebtoken';\r\n\r\nexport default function Register() {\r\n    const url = `http://131.181.190.87:3000/user/register`\r\n\r\n    function register(email, password) {\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            headers: { accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email: email, password: password })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                //localStorage.setItem('token',res.token)\r\n            })\r\n    }\r\n    return (\r\n        <div id='regInputs'>\r\n            <h1>Register</h1>\r\n            <div>\r\n                <label>Email:</label>\r\n                <input\r\n                    id='regEmail'\r\n                    type=\"email\"\r\n                ></input>\r\n            </div>\r\n            <div>\r\n                <label>Password:</label>\r\n                <input\r\n                    id=\"regPassword\"\r\n                    type=\"password\"\r\n                ></input>\r\n            </div>\r\n            <Button\r\n                onClick={e => {\r\n                    let email = document.getElementById(\"regEmail\").value;\r\n                    let password = document.getElementById(\"regPassword\").value;\r\n                    register(email, password);\r\n                }}\r\n            >Register</Button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\n\nimport Home from \"./pages/Home\"\nimport AllStock from \"./pages/AllStocks\"\nimport SearchStock from \"./pages/SearchStock\"\nimport AuthedSearch from \"./pages/AuthedSearchStock\"\nimport Login from \"./pages/Login\"\nimport Register from \"./pages/Register\"\n\nimport { Link, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <div>\n      <NavStocks />\n      <NavUser />\n    </div>\n  )\n}\n\nfunction NavUser() {\n  return (\n    <nav id=\"User\">\n      <ul>\n        <li>\n          <Link to=\"/user/register\">Register</Link>\n        </li>\n        <li>\n          <Link to=\"/user/login\">Login</Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nfunction NavStocks() {\n  return (\n    <nav id=\"Stocks\">\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/stocks/symbols\">All Stocks</Link>\n        </li>\n        <li>\n          <Link to=\"/stocks/symbol\">Search Stocks</Link>\n        </li>\n        <li>\n          <Link to=\"/stock/authed/symbol\">Authenticated Search</Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <div>\n\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Switch>\n\n            <Route path=\"/stocks/symbols\">\n              <AllStock />\n            </Route>\n\n            <Route path=\"/stocks/symbol\">\n              <SearchStock />\n            </Route>\n\n            <Route path=\"/stock/authed/symbol\">\n              <AuthedSearch />\n            </Route>\n\n            <Route path=\"/user/register\">\n              <Register />\n            </Route>\n\n            <Route path=\"/user/login\">\n              <Login />\n            </Route>\n\n          </Switch>\n        </div>\n\n      </div>\n    </Router>\n\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}